// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/elojah/trax/internal/user/dto/role.proto

package dto

import (
	fmt "fmt"
	user "github.com/elojah/trax/internal/user"
	_ "github.com/elojah/trax/pkg/gogoproto"
	paginate "github.com/elojah/trax/pkg/paginate"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type CreateRoleReq struct {
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (m *CreateRoleReq) Reset()      { *m = CreateRoleReq{} }
func (*CreateRoleReq) ProtoMessage() {}
func (*CreateRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_345bd77e73122213, []int{0}
}
func (m *CreateRoleReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateRoleReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRoleReq.Merge(m, src)
}
func (m *CreateRoleReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRoleReq proto.InternalMessageInfo

type ListRoleReq struct {
	Paginate *paginate.Paginate `protobuf:"bytes,1,opt,name=Paginate,proto3" json:"Paginate,omitempty"`
	Search   string             `protobuf:"bytes,2,opt,name=Search,proto3" json:"Search,omitempty"`
}

func (m *ListRoleReq) Reset()      { *m = ListRoleReq{} }
func (*ListRoleReq) ProtoMessage() {}
func (*ListRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_345bd77e73122213, []int{1}
}
func (m *ListRoleReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListRoleReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoleReq.Merge(m, src)
}
func (m *ListRoleReq) XXX_Size() int {
	return m.Size()
}
func (m *ListRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoleReq proto.InternalMessageInfo

type ListRoleResp struct {
	Roles []user.Role `protobuf:"bytes,1,rep,name=Roles,proto3" json:"Roles"`
	Total uint64      `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (m *ListRoleResp) Reset()      { *m = ListRoleResp{} }
func (*ListRoleResp) ProtoMessage() {}
func (*ListRoleResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_345bd77e73122213, []int{2}
}
func (m *ListRoleResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ListRoleResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ListRoleResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ListRoleResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoleResp.Merge(m, src)
}
func (m *ListRoleResp) XXX_Size() int {
	return m.Size()
}
func (m *ListRoleResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoleResp.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoleResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateRoleReq)(nil), "dto.CreateRoleReq")
	golang_proto.RegisterType((*CreateRoleReq)(nil), "dto.CreateRoleReq")
	proto.RegisterType((*ListRoleReq)(nil), "dto.ListRoleReq")
	golang_proto.RegisterType((*ListRoleReq)(nil), "dto.ListRoleReq")
	proto.RegisterType((*ListRoleResp)(nil), "dto.ListRoleResp")
	golang_proto.RegisterType((*ListRoleResp)(nil), "dto.ListRoleResp")
}

func init() {
	proto.RegisterFile("github.com/elojah/trax/internal/user/dto/role.proto", fileDescriptor_345bd77e73122213)
}
func init() {
	golang_proto.RegisterFile("github.com/elojah/trax/internal/user/dto/role.proto", fileDescriptor_345bd77e73122213)
}

var fileDescriptor_345bd77e73122213 = []byte{
	// 330 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xbd, 0x4e, 0x02, 0x41,
	0x14, 0x85, 0xe7, 0xca, 0x4f, 0x74, 0xd0, 0x66, 0x62, 0x0c, 0xa1, 0xb8, 0x12, 0x4c, 0x0c, 0xd5,
	0x4e, 0x02, 0x3e, 0x01, 0x36, 0x16, 0xc4, 0x98, 0xd5, 0xce, 0x6a, 0x80, 0xc9, 0xb2, 0xba, 0x30,
	0xeb, 0xec, 0x90, 0x58, 0xfa, 0x08, 0x3e, 0x86, 0x8f, 0x60, 0x49, 0x49, 0x49, 0x49, 0x65, 0xdc,
	0xd9, 0xc6, 0x92, 0xd2, 0xd2, 0x30, 0xc0, 0x52, 0x69, 0xec, 0xce, 0x9d, 0x7b, 0xce, 0x99, 0x2f,
	0x97, 0xb6, 0x83, 0xd0, 0x0c, 0x27, 0x3d, 0xaf, 0xaf, 0x46, 0x5c, 0x46, 0xea, 0x41, 0x0c, 0xb9,
	0xd1, 0xe2, 0x99, 0x87, 0x63, 0x23, 0xf5, 0x58, 0x44, 0x7c, 0x92, 0x48, 0xcd, 0x07, 0x46, 0x71,
	0xad, 0x22, 0xe9, 0xc5, 0x5a, 0x19, 0xc5, 0x0a, 0x03, 0xa3, 0x6a, 0xfc, 0x97, 0x64, 0xfc, 0x18,
	0xf0, 0x40, 0x05, 0xca, 0x59, 0x9d, 0x5a, 0xa7, 0x6a, 0xad, 0x3f, 0x02, 0xb1, 0x08, 0xc2, 0xb1,
	0x30, 0x32, 0x17, 0x9b, 0x0c, 0xff, 0x17, 0xde, 0x0e, 0xad, 0x71, 0x46, 0x8f, 0x2e, 0xb5, 0x14,
	0x46, 0xfa, 0x2a, 0x92, 0xbe, 0x7c, 0x62, 0x8c, 0x16, 0xaf, 0xc5, 0x48, 0x56, 0xa1, 0x0e, 0xcd,
	0x03, 0xdf, 0xe9, 0xc6, 0x3d, 0xad, 0x74, 0xc3, 0xc4, 0x6c, 0x2d, 0x17, 0x74, 0xff, 0x66, 0xf3,
	0xad, 0xb3, 0x55, 0x5a, 0xcc, 0xcb, 0x39, 0xb6, 0x9b, 0x4e, 0x71, 0xf6, 0x71, 0x0a, 0x7e, 0xee,
	0x64, 0x27, 0xb4, 0x7c, 0x2b, 0x85, 0xee, 0x0f, 0xab, 0x7b, 0xae, 0x7a, 0x33, 0x35, 0xba, 0xf4,
	0x70, 0x57, 0x9e, 0xc4, 0xec, 0x9c, 0x96, 0x56, 0x3a, 0xa9, 0x42, 0xbd, 0xd0, 0xac, 0xb4, 0xa8,
	0xb7, 0x42, 0xf6, 0x56, 0x4f, 0xae, 0x92, 0xf8, 0xeb, 0x35, 0x3b, 0xa6, 0xa5, 0x3b, 0x65, 0x44,
	0xe4, 0xea, 0x8a, 0xfe, 0x7a, 0xe8, 0x5c, 0xcd, 0x52, 0x24, 0xf3, 0x14, 0xc9, 0x22, 0x45, 0xb2,
	0x4c, 0x11, 0xbe, 0x53, 0x84, 0x17, 0x8b, 0xf0, 0x66, 0x11, 0xde, 0x2d, 0xc2, 0xd4, 0x22, 0xcc,
	0x2c, 0xc2, 0xdc, 0x22, 0x7c, 0x5a, 0x84, 0x2f, 0x8b, 0x64, 0x69, 0x11, 0x5e, 0x33, 0x24, 0xd3,
	0x0c, 0x61, 0x9e, 0x21, 0x59, 0x64, 0x48, 0x7a, 0x65, 0x77, 0xa0, 0xf6, 0x4f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xf7, 0xe7, 0xa1, 0x92, 0xf2, 0x01, 0x00, 0x00,
}

func (this *CreateRoleReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*CreateRoleReq)
	if !ok {
		that2, ok := that.(CreateRoleReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Name != that1.Name {
		return false
	}
	return true
}
func (this *ListRoleReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListRoleReq)
	if !ok {
		that2, ok := that.(ListRoleReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Paginate.Equal(that1.Paginate) {
		return false
	}
	if this.Search != that1.Search {
		return false
	}
	return true
}
func (this *ListRoleResp) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ListRoleResp)
	if !ok {
		that2, ok := that.(ListRoleResp)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if len(this.Roles) != len(that1.Roles) {
		return false
	}
	for i := range this.Roles {
		if !this.Roles[i].Equal(&that1.Roles[i]) {
			return false
		}
	}
	if this.Total != that1.Total {
		return false
	}
	return true
}
func (this *CreateRoleReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 5)
	s = append(s, "&dto.CreateRoleReq{")
	s = append(s, "Name: "+fmt.Sprintf("%#v", this.Name)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListRoleReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&dto.ListRoleReq{")
	if this.Paginate != nil {
		s = append(s, "Paginate: "+fmt.Sprintf("%#v", this.Paginate)+",\n")
	}
	s = append(s, "Search: "+fmt.Sprintf("%#v", this.Search)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func (this *ListRoleResp) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&dto.ListRoleResp{")
	if this.Roles != nil {
		vs := make([]user.Role, len(this.Roles))
		for i := range vs {
			vs[i] = this.Roles[i]
		}
		s = append(s, "Roles: "+fmt.Sprintf("%#v", vs)+",\n")
	}
	s = append(s, "Total: "+fmt.Sprintf("%#v", this.Total)+",\n")
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringRole(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *CreateRoleReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateRoleReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateRoleReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintRole(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListRoleReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListRoleReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListRoleReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Search) > 0 {
		i -= len(m.Search)
		copy(dAtA[i:], m.Search)
		i = encodeVarintRole(dAtA, i, uint64(len(m.Search)))
		i--
		dAtA[i] = 0x12
	}
	if m.Paginate != nil {
		{
			size, err := m.Paginate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintRole(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ListRoleResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ListRoleResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ListRoleResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Total != 0 {
		i = encodeVarintRole(dAtA, i, uint64(m.Total))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Roles) > 0 {
		for iNdEx := len(m.Roles) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Roles[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRole(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintRole(dAtA []byte, offset int, v uint64) int {
	offset -= sovRole(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedCreateRoleReq(r randyRole, easy bool) *CreateRoleReq {
	this := &CreateRoleReq{}
	this.Name = string(randStringRole(r))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedListRoleReq(r randyRole, easy bool) *ListRoleReq {
	this := &ListRoleReq{}
	if r.Intn(5) != 0 {
		this.Paginate = paginate.NewPopulatedPaginate(r, easy)
	}
	this.Search = string(randStringRole(r))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

func NewPopulatedListRoleResp(r randyRole, easy bool) *ListRoleResp {
	this := &ListRoleResp{}
	if r.Intn(5) != 0 {
		v1 := r.Intn(5)
		this.Roles = make([]user.Role, v1)
		for i := 0; i < v1; i++ {
			v2 := user.NewPopulatedRole(r, easy)
			this.Roles[i] = *v2
		}
	}
	this.Total = uint64(uint64(r.Uint32()))
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyRole interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneRole(r randyRole) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringRole(r randyRole) string {
	v3 := r.Intn(100)
	tmps := make([]rune, v3)
	for i := 0; i < v3; i++ {
		tmps[i] = randUTF8RuneRole(r)
	}
	return string(tmps)
}
func randUnrecognizedRole(r randyRole, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldRole(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldRole(dAtA []byte, r randyRole, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateRole(dAtA, uint64(key))
		v4 := r.Int63()
		if r.Intn(2) == 0 {
			v4 *= -1
		}
		dAtA = encodeVarintPopulateRole(dAtA, uint64(v4))
	case 1:
		dAtA = encodeVarintPopulateRole(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateRole(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateRole(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateRole(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateRole(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *CreateRoleReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovRole(uint64(l))
	}
	return n
}

func (m *ListRoleReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Paginate != nil {
		l = m.Paginate.Size()
		n += 1 + l + sovRole(uint64(l))
	}
	l = len(m.Search)
	if l > 0 {
		n += 1 + l + sovRole(uint64(l))
	}
	return n
}

func (m *ListRoleResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Roles) > 0 {
		for _, e := range m.Roles {
			l = e.Size()
			n += 1 + l + sovRole(uint64(l))
		}
	}
	if m.Total != 0 {
		n += 1 + sovRole(uint64(m.Total))
	}
	return n
}

func sovRole(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRole(x uint64) (n int) {
	return sovRole(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *CreateRoleReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateRoleReq{`,
		`Name:` + fmt.Sprintf("%v", this.Name) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListRoleReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&ListRoleReq{`,
		`Paginate:` + strings.Replace(fmt.Sprintf("%v", this.Paginate), "Paginate", "paginate.Paginate", 1) + `,`,
		`Search:` + fmt.Sprintf("%v", this.Search) + `,`,
		`}`,
	}, "")
	return s
}
func (this *ListRoleResp) String() string {
	if this == nil {
		return "nil"
	}
	repeatedStringForRoles := "[]Role{"
	for _, f := range this.Roles {
		repeatedStringForRoles += fmt.Sprintf("%v", f) + ","
	}
	repeatedStringForRoles += "}"
	s := strings.Join([]string{`&ListRoleResp{`,
		`Roles:` + repeatedStringForRoles + `,`,
		`Total:` + fmt.Sprintf("%v", this.Total) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringRole(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *CreateRoleReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRole
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateRoleReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateRoleReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRole(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRole
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRole
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListRoleReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRole
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListRoleReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListRoleReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Paginate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRole
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Paginate == nil {
				m.Paginate = &paginate.Paginate{}
			}
			if err := m.Paginate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Search", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRole
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Search = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRole(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRole
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRole
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ListRoleResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRole
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ListRoleResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ListRoleResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Roles", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRole
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRole
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Roles = append(m.Roles, user.Role{})
			if err := m.Roles[len(m.Roles)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Total", wireType)
			}
			m.Total = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRole
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Total |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRole(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthRole
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthRole
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRole(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRole
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRole
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRole
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRole
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRole
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRole
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRole        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRole          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRole = fmt.Errorf("proto: unexpected end of group")
)
