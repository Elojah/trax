// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/elojah/trax/internal/user/dto/profile.proto

package dto

import (
	fmt "fmt"
	_ "github.com/elojah/trax/pkg/gogoproto"
	pbtypes "github.com/elojah/trax/pkg/pbtypes"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type UpdateProfileReq struct {
	Firstname *pbtypes.String `protobuf:"bytes,1,opt,name=Firstname,proto3" json:"Firstname,omitempty"`
	Lastname  *pbtypes.String `protobuf:"bytes,2,opt,name=Lastname,proto3" json:"Lastname,omitempty"`
}

func (m *UpdateProfileReq) Reset()      { *m = UpdateProfileReq{} }
func (*UpdateProfileReq) ProtoMessage() {}
func (*UpdateProfileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4a6d37e631abfc2, []int{0}
}
func (m *UpdateProfileReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UpdateProfileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UpdateProfileReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UpdateProfileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateProfileReq.Merge(m, src)
}
func (m *UpdateProfileReq) XXX_Size() int {
	return m.Size()
}
func (m *UpdateProfileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateProfileReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateProfileReq proto.InternalMessageInfo

func init() {
	proto.RegisterType((*UpdateProfileReq)(nil), "dto.UpdateProfileReq")
	golang_proto.RegisterType((*UpdateProfileReq)(nil), "dto.UpdateProfileReq")
}

func init() {
	proto.RegisterFile("github.com/elojah/trax/internal/user/dto/profile.proto", fileDescriptor_b4a6d37e631abfc2)
}
func init() {
	golang_proto.RegisterFile("github.com/elojah/trax/internal/user/dto/profile.proto", fileDescriptor_b4a6d37e631abfc2)
}

var fileDescriptor_b4a6d37e631abfc2 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xcf, 0xb1, 0x4a, 0xc4, 0x40,
	0x10, 0xc6, 0xf1, 0x1d, 0x05, 0xd1, 0x58, 0x28, 0xa9, 0xc4, 0x62, 0x10, 0x2b, 0x41, 0xcc, 0x82,
	0x82, 0x0f, 0x60, 0x21, 0x16, 0x16, 0x72, 0xe2, 0x03, 0x6c, 0xcc, 0x9a, 0x5b, 0xcd, 0xed, 0xae,
	0x9b, 0x39, 0xd0, 0xce, 0x47, 0xf0, 0x31, 0x7c, 0x04, 0xcb, 0x2b, 0xaf, 0x4c, 0x79, 0xa5, 0x3b,
	0x69, 0x2c, 0xaf, 0xb4, 0x14, 0x92, 0x43, 0x1b, 0xbd, 0x6e, 0x8a, 0xff, 0x8f, 0xe1, 0x4b, 0x4e,
	0x4b, 0x43, 0xc3, 0x71, 0x9e, 0xdd, 0xba, 0x91, 0xd4, 0x95, 0xbb, 0x57, 0x43, 0x49, 0x41, 0x3d,
	0x49, 0x63, 0x49, 0x07, 0xab, 0x2a, 0x39, 0xae, 0x75, 0x90, 0x05, 0x39, 0xe9, 0x83, 0xbb, 0x33,
	0x95, 0xce, 0x7c, 0x70, 0xe4, 0xd2, 0xd5, 0x82, 0xdc, 0xae, 0xfc, 0x07, 0xfb, 0x87, 0x52, 0x96,
	0xae, 0x74, 0x5d, 0xda, 0x5d, 0xbd, 0x5a, 0x0a, 0x7c, 0x4e, 0xcf, 0x5e, 0xd7, 0xb2, 0xa6, 0x60,
	0x6c, 0xd9, 0x83, 0x7d, 0x9b, 0x6c, 0xdf, 0xf8, 0x42, 0x91, 0xbe, 0xea, 0xbf, 0x0f, 0xf4, 0x63,
	0x7a, 0x94, 0x6c, 0x9c, 0x9b, 0x50, 0x93, 0x55, 0x23, 0xbd, 0x03, 0x7b, 0x70, 0xb0, 0x79, 0xbc,
	0x95, 0x2d, 0x74, 0x76, 0xdd, 0xe9, 0xc1, 0x6f, 0x91, 0x1e, 0x26, 0xeb, 0x97, 0x6a, 0x51, 0xaf,
	0xfc, 0x5d, 0xff, 0x04, 0x67, 0x17, 0xd3, 0x88, 0xa2, 0x89, 0x28, 0x66, 0x11, 0xc5, 0x3c, 0x22,
	0x7c, 0x45, 0x84, 0x17, 0x46, 0x78, 0x63, 0x84, 0x77, 0x46, 0x98, 0x30, 0xc2, 0x94, 0x11, 0x1a,
	0x46, 0xf8, 0x60, 0x84, 0x4f, 0x46, 0x31, 0x67, 0x84, 0xd7, 0x16, 0xc5, 0xa4, 0x45, 0x68, 0x5a,
	0x14, 0xb3, 0x16, 0x45, 0xbe, 0xd6, 0x0d, 0x38, 0xf9, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x20,
	0xa0, 0x6c, 0x61, 0x01, 0x00, 0x00,
}

func (this *UpdateProfileReq) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*UpdateProfileReq)
	if !ok {
		that2, ok := that.(UpdateProfileReq)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Firstname.Equal(that1.Firstname) {
		return false
	}
	if !this.Lastname.Equal(that1.Lastname) {
		return false
	}
	return true
}
func (this *UpdateProfileReq) GoString() string {
	if this == nil {
		return "nil"
	}
	s := make([]string, 0, 6)
	s = append(s, "&dto.UpdateProfileReq{")
	if this.Firstname != nil {
		s = append(s, "Firstname: "+fmt.Sprintf("%#v", this.Firstname)+",\n")
	}
	if this.Lastname != nil {
		s = append(s, "Lastname: "+fmt.Sprintf("%#v", this.Lastname)+",\n")
	}
	s = append(s, "}")
	return strings.Join(s, "")
}
func valueToGoStringProfile(v interface{}, typ string) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("func(v %v) *%v { return &v } ( %#v )", typ, typ, pv)
}
func (m *UpdateProfileReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UpdateProfileReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UpdateProfileReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Lastname != nil {
		{
			size, err := m.Lastname.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProfile(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Firstname != nil {
		{
			size, err := m.Firstname.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintProfile(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintProfile(dAtA []byte, offset int, v uint64) int {
	offset -= sovProfile(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func NewPopulatedUpdateProfileReq(r randyProfile, easy bool) *UpdateProfileReq {
	this := &UpdateProfileReq{}
	if r.Intn(5) != 0 {
		this.Firstname = pbtypes.NewPopulatedString(r, easy)
	}
	if r.Intn(5) != 0 {
		this.Lastname = pbtypes.NewPopulatedString(r, easy)
	}
	if !easy && r.Intn(10) != 0 {
	}
	return this
}

type randyProfile interface {
	Float32() float32
	Float64() float64
	Int63() int64
	Int31() int32
	Uint32() uint32
	Intn(n int) int
}

func randUTF8RuneProfile(r randyProfile) rune {
	ru := r.Intn(62)
	if ru < 10 {
		return rune(ru + 48)
	} else if ru < 36 {
		return rune(ru + 55)
	}
	return rune(ru + 61)
}
func randStringProfile(r randyProfile) string {
	v1 := r.Intn(100)
	tmps := make([]rune, v1)
	for i := 0; i < v1; i++ {
		tmps[i] = randUTF8RuneProfile(r)
	}
	return string(tmps)
}
func randUnrecognizedProfile(r randyProfile, maxFieldNumber int) (dAtA []byte) {
	l := r.Intn(5)
	for i := 0; i < l; i++ {
		wire := r.Intn(4)
		if wire == 3 {
			wire = 5
		}
		fieldNumber := maxFieldNumber + r.Intn(100)
		dAtA = randFieldProfile(dAtA, r, fieldNumber, wire)
	}
	return dAtA
}
func randFieldProfile(dAtA []byte, r randyProfile, fieldNumber int, wire int) []byte {
	key := uint32(fieldNumber)<<3 | uint32(wire)
	switch wire {
	case 0:
		dAtA = encodeVarintPopulateProfile(dAtA, uint64(key))
		v2 := r.Int63()
		if r.Intn(2) == 0 {
			v2 *= -1
		}
		dAtA = encodeVarintPopulateProfile(dAtA, uint64(v2))
	case 1:
		dAtA = encodeVarintPopulateProfile(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	case 2:
		dAtA = encodeVarintPopulateProfile(dAtA, uint64(key))
		ll := r.Intn(100)
		dAtA = encodeVarintPopulateProfile(dAtA, uint64(ll))
		for j := 0; j < ll; j++ {
			dAtA = append(dAtA, byte(r.Intn(256)))
		}
	default:
		dAtA = encodeVarintPopulateProfile(dAtA, uint64(key))
		dAtA = append(dAtA, byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)), byte(r.Intn(256)))
	}
	return dAtA
}
func encodeVarintPopulateProfile(dAtA []byte, v uint64) []byte {
	for v >= 1<<7 {
		dAtA = append(dAtA, uint8(uint64(v)&0x7f|0x80))
		v >>= 7
	}
	dAtA = append(dAtA, uint8(v))
	return dAtA
}
func (m *UpdateProfileReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Firstname != nil {
		l = m.Firstname.Size()
		n += 1 + l + sovProfile(uint64(l))
	}
	if m.Lastname != nil {
		l = m.Lastname.Size()
		n += 1 + l + sovProfile(uint64(l))
	}
	return n
}

func sovProfile(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozProfile(x uint64) (n int) {
	return sovProfile(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *UpdateProfileReq) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&UpdateProfileReq{`,
		`Firstname:` + strings.Replace(fmt.Sprintf("%v", this.Firstname), "String", "pbtypes.String", 1) + `,`,
		`Lastname:` + strings.Replace(fmt.Sprintf("%v", this.Lastname), "String", "pbtypes.String", 1) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringProfile(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
func (m *UpdateProfileReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UpdateProfileReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UpdateProfileReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Firstname", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProfile
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Firstname == nil {
				m.Firstname = &pbtypes.String{}
			}
			if err := m.Firstname.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Lastname", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthProfile
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Lastname == nil {
				m.Lastname = &pbtypes.String{}
			}
			if err := m.Lastname.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProfile(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthProfile
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupProfile
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthProfile
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthProfile        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProfile          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupProfile = fmt.Errorf("proto: unexpected end of group")
)
