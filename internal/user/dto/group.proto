syntax = "proto3";

package dto;

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_registration) = true;

option go_package = "github.com/elojah/trax/internal/user/dto";

import "pkg/gogoproto/gogo.proto";
import "pkg/pbtypes/string.proto";

import "pkg/paginate/paginate.proto";
import "internal/user/group.proto";
import "internal/user/user.proto";

message GroupView {
	user.Group Group             = 1 [(gogoproto.nullable) = false];
	repeated user.U UserSample   = 2 [(gogoproto.nullable) = false];
	uint64 UserCount             = 3;
	uint64 RoleCount             = 4;
}

message CreateGroupReq {
	string Name                 = 1;
    string Description          = 2;
    string AvatarURL            = 3;
}

message UpdateGroupReq {
	bytes ID                      = 1 [(gogoproto.customtype) = "github.com/elojah/trax/pkg/ulid.ID", (gogoproto.nullable) = false];

	pbtypes.String Name           = 2;
    pbtypes.String Description    = 3;
    pbtypes.String AvatarURL      = 4;
}

message FetchGroupReq {
	bytes ID                      = 1 [(gogoproto.customtype) = "github.com/elojah/trax/pkg/ulid.ID", (gogoproto.nullable) = false];
}

message ListGroupReq {
	paginate.Paginate Paginate    = 1 [(gogoproto.nullable) = true];
	string Search                 = 2;

	bool Own                      = 3;
	repeated bytes IDs            = 4 [(gogoproto.customtype) = "github.com/elojah/trax/pkg/ulid.ID", (gogoproto.nullable) = false];
}

message ListGroupResp {
	repeated GroupView Groups     = 1 [(gogoproto.nullable) = false];
	uint64 Total                  = 2;
}

message DeleteGroupReq {
	bytes ID                      = 1 [(gogoproto.customtype) = "github.com/elojah/trax/pkg/ulid.ID", (gogoproto.nullable) = false];
}
