syntax = "proto3";

package user;

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_registration) = true;

import "github.com/elojah/trax/pkg/gogoproto/gogo.proto";

import "github.com/elojah/trax/pkg/pbtypes/empty.proto";

message ClaimResources {
	// Commands key must be a user.Commands
	map<string, pbtypes.Empty> Commands            = 1 [(gogoproto.nullable) = false];
}

message ClaimEntity {
	bytes ID                                       = 1 [(gogoproto.customtype) = "github.com/elojah/trax/pkg/ulid.ID", (gogoproto.nullable) = false];
	// Roles key must be a user.Role ID
	map<string, pbtypes.Empty> Roles               = 2 [(gogoproto.nullable) = false];
	// Resources key must be a user.Resource
	map<string, ClaimResources> Resources          = 3 [(gogoproto.nullable) = false];
}

message ClaimAuth {
	// Entities key must be a entity.ID
	map<string, ClaimEntity> Entities              = 1 [(gogoproto.nullable) = false];
}
