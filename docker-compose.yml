services:

  # PostgreSQL
  postgres:
    image: postgres:latest
    container_name: trax_postgres
    hostname: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./docker/postgres/_data:/var/lib/postgresql/data
    networks:
      - trax_network
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U username -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis
  redis:
    build: docker/redis
    container_name: trax_redis
    hostname: redis
    volumes:
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - trax_network
    expose:
      - 6379
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin
  admin:
    build:
      context: .
      dockerfile: docker/admin/Dockerfile
    container_name: trax_admin
    hostname: admin
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trax_network
    expose:
      - 4282
    ports:
      - "4282:4282"

  # API
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    container_name: trax_api
    hostname: api
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trax_network
    expose:
      - 8082
      - 4280
    ports:
      - "8082:8082"  # HTTP/gRPC-Web
      - "4280:4280"  # gRPC

  # Auth
  auth:
    build:
      context: .
      dockerfile: docker/auth/Dockerfile
    container_name: trax_auth
    hostname: auth
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - trax_network
    expose:
      - 8081
    ports:
      - "8081:8081"

  # Web Client
  web_client:
    build:
      context: .
      dockerfile: docker/web_client/Dockerfile
    container_name: trax_web_client
    hostname: web_client
    depends_on:
      - api
      - auth
      - redis
    networks:
      - trax_network
    expose:
      - 8080
      - 443
    ports:
      - "8080:8080"
      - "443:443"

networks:
  trax_network:

