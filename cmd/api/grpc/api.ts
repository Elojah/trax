/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.12.4
 * source: cmd/api/grpc/api.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./../../../pkg/gogoproto/gogo";
import * as dependency_2 from "./../../../pkg/pbtypes/empty";
import * as dependency_3 from "./../../../internal/user/entity";
import * as dependency_4 from "./../../../internal/user/user";
import * as dependency_5 from "./../../../internal/user/claims";
import * as dependency_6 from "./../../../internal/user/dto/entity";
import * as dependency_7 from "./../../../internal/user/dto/role";
import * as dependency_8 from "./../../../internal/user/dto/user";
import * as grpc_1 from "@grpc/grpc-js";
export namespace grpc {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedAPIService {
        static definition = {
            Ping: {
                path: "/grpc.API/Ping",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.pbtypes.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.pbtypes.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_2.pbtypes.Empty) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_2.pbtypes.Empty.deserialize(new Uint8Array(bytes))
            },
            ListUser: {
                path: "/grpc.API/ListUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.dto.ListUserReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.dto.ListUserReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.dto.ListUserResp) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.dto.ListUserResp.deserialize(new Uint8Array(bytes))
            },
            FetchUser: {
                path: "/grpc.API/FetchUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.dto.FetchUserReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.dto.FetchUserReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.user.U) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.user.U.deserialize(new Uint8Array(bytes))
            },
            UpdateUser: {
                path: "/grpc.API/UpdateUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.dto.UpdateUserReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.dto.UpdateUserReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_4.user.U) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_4.user.U.deserialize(new Uint8Array(bytes))
            },
            InviteUser: {
                path: "/grpc.API/InviteUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_8.dto.InviteUserReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_8.dto.InviteUserReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.dto.UserRoles) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.dto.UserRoles.deserialize(new Uint8Array(bytes))
            },
            FetchClaims: {
                path: "/grpc.API/FetchClaims",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_2.pbtypes.Empty) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_2.pbtypes.Empty.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_5.user.ClaimAuth) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_5.user.ClaimAuth.deserialize(new Uint8Array(bytes))
            },
            ListEntity: {
                path: "/grpc.API/ListEntity",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.dto.ListEntityReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.dto.ListEntityReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.dto.ListEntityResp) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.dto.ListEntityResp.deserialize(new Uint8Array(bytes))
            },
            FetchEntity: {
                path: "/grpc.API/FetchEntity",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.dto.FetchEntityReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.dto.FetchEntityReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.user.Entity) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.user.Entity.deserialize(new Uint8Array(bytes))
            },
            CreateEntity: {
                path: "/grpc.API/CreateEntity",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.dto.CreateEntityReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.dto.CreateEntityReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.user.Entity) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.user.Entity.deserialize(new Uint8Array(bytes))
            },
            UpdateEntity: {
                path: "/grpc.API/UpdateEntity",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.dto.UpdateEntityReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.dto.UpdateEntityReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_3.user.Entity) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_3.user.Entity.deserialize(new Uint8Array(bytes))
            },
            DeleteEntity: {
                path: "/grpc.API/DeleteEntity",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_6.dto.DeleteEntityReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_6.dto.DeleteEntityReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_6.dto.DeleteEntityResp) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_6.dto.DeleteEntityResp.deserialize(new Uint8Array(bytes))
            },
            ListRole: {
                path: "/grpc.API/ListRole",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.dto.ListRoleReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.dto.ListRoleReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.dto.ListRoleResp) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.dto.ListRoleResp.deserialize(new Uint8Array(bytes))
            },
            CreateRole: {
                path: "/grpc.API/CreateRole",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.dto.CreateRoleReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.dto.CreateRoleReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.dto.RolePermission) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.dto.RolePermission.deserialize(new Uint8Array(bytes))
            },
            UpdateRole: {
                path: "/grpc.API/UpdateRole",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.dto.UpdateRoleReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.dto.UpdateRoleReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.dto.RolePermission) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.dto.RolePermission.deserialize(new Uint8Array(bytes))
            },
            DeleteRole: {
                path: "/grpc.API/DeleteRole",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.dto.DeleteRoleReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.dto.DeleteRoleReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_7.dto.RolePermission) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_7.dto.RolePermission.deserialize(new Uint8Array(bytes))
            },
            CreateRoleUser: {
                path: "/grpc.API/CreateRoleUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.dto.CreateRoleUserReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.dto.CreateRoleUserReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.dto.UserRoles) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.dto.UserRoles.deserialize(new Uint8Array(bytes))
            },
            DeleteRoleUser: {
                path: "/grpc.API/DeleteRoleUser",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_7.dto.DeleteRoleUserReq) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_7.dto.DeleteRoleUserReq.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_8.dto.UserRoles) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_8.dto.UserRoles.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Ping(call: grpc_1.ServerUnaryCall<dependency_2.pbtypes.Empty, dependency_2.pbtypes.Empty>, callback: grpc_1.sendUnaryData<dependency_2.pbtypes.Empty>): void;
        abstract ListUser(call: grpc_1.ServerUnaryCall<dependency_8.dto.ListUserReq, dependency_8.dto.ListUserResp>, callback: grpc_1.sendUnaryData<dependency_8.dto.ListUserResp>): void;
        abstract FetchUser(call: grpc_1.ServerUnaryCall<dependency_8.dto.FetchUserReq, dependency_4.user.U>, callback: grpc_1.sendUnaryData<dependency_4.user.U>): void;
        abstract UpdateUser(call: grpc_1.ServerUnaryCall<dependency_8.dto.UpdateUserReq, dependency_4.user.U>, callback: grpc_1.sendUnaryData<dependency_4.user.U>): void;
        abstract InviteUser(call: grpc_1.ServerUnaryCall<dependency_8.dto.InviteUserReq, dependency_8.dto.UserRoles>, callback: grpc_1.sendUnaryData<dependency_8.dto.UserRoles>): void;
        abstract FetchClaims(call: grpc_1.ServerUnaryCall<dependency_2.pbtypes.Empty, dependency_5.user.ClaimAuth>, callback: grpc_1.sendUnaryData<dependency_5.user.ClaimAuth>): void;
        abstract ListEntity(call: grpc_1.ServerUnaryCall<dependency_6.dto.ListEntityReq, dependency_6.dto.ListEntityResp>, callback: grpc_1.sendUnaryData<dependency_6.dto.ListEntityResp>): void;
        abstract FetchEntity(call: grpc_1.ServerUnaryCall<dependency_6.dto.FetchEntityReq, dependency_3.user.Entity>, callback: grpc_1.sendUnaryData<dependency_3.user.Entity>): void;
        abstract CreateEntity(call: grpc_1.ServerUnaryCall<dependency_6.dto.CreateEntityReq, dependency_3.user.Entity>, callback: grpc_1.sendUnaryData<dependency_3.user.Entity>): void;
        abstract UpdateEntity(call: grpc_1.ServerUnaryCall<dependency_6.dto.UpdateEntityReq, dependency_3.user.Entity>, callback: grpc_1.sendUnaryData<dependency_3.user.Entity>): void;
        abstract DeleteEntity(call: grpc_1.ServerUnaryCall<dependency_6.dto.DeleteEntityReq, dependency_6.dto.DeleteEntityResp>, callback: grpc_1.sendUnaryData<dependency_6.dto.DeleteEntityResp>): void;
        abstract ListRole(call: grpc_1.ServerUnaryCall<dependency_7.dto.ListRoleReq, dependency_7.dto.ListRoleResp>, callback: grpc_1.sendUnaryData<dependency_7.dto.ListRoleResp>): void;
        abstract CreateRole(call: grpc_1.ServerUnaryCall<dependency_7.dto.CreateRoleReq, dependency_7.dto.RolePermission>, callback: grpc_1.sendUnaryData<dependency_7.dto.RolePermission>): void;
        abstract UpdateRole(call: grpc_1.ServerUnaryCall<dependency_7.dto.UpdateRoleReq, dependency_7.dto.RolePermission>, callback: grpc_1.sendUnaryData<dependency_7.dto.RolePermission>): void;
        abstract DeleteRole(call: grpc_1.ServerUnaryCall<dependency_7.dto.DeleteRoleReq, dependency_7.dto.RolePermission>, callback: grpc_1.sendUnaryData<dependency_7.dto.RolePermission>): void;
        abstract CreateRoleUser(call: grpc_1.ServerUnaryCall<dependency_7.dto.CreateRoleUserReq, dependency_8.dto.UserRoles>, callback: grpc_1.sendUnaryData<dependency_8.dto.UserRoles>): void;
        abstract DeleteRoleUser(call: grpc_1.ServerUnaryCall<dependency_7.dto.DeleteRoleUserReq, dependency_8.dto.UserRoles>, callback: grpc_1.sendUnaryData<dependency_8.dto.UserRoles>): void;
    }
    export class APIClient extends grpc_1.makeGenericClientConstructor(UnimplementedAPIService.definition, "API", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        Ping: GrpcUnaryServiceInterface<dependency_2.pbtypes.Empty, dependency_2.pbtypes.Empty> = (message: dependency_2.pbtypes.Empty, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_2.pbtypes.Empty>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_2.pbtypes.Empty>, callback?: grpc_1.requestCallback<dependency_2.pbtypes.Empty>): grpc_1.ClientUnaryCall => {
            return super.Ping(message, metadata, options, callback);
        };
        ListUser: GrpcUnaryServiceInterface<dependency_8.dto.ListUserReq, dependency_8.dto.ListUserResp> = (message: dependency_8.dto.ListUserReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.ListUserResp>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.ListUserResp>, callback?: grpc_1.requestCallback<dependency_8.dto.ListUserResp>): grpc_1.ClientUnaryCall => {
            return super.ListUser(message, metadata, options, callback);
        };
        FetchUser: GrpcUnaryServiceInterface<dependency_8.dto.FetchUserReq, dependency_4.user.U> = (message: dependency_8.dto.FetchUserReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.user.U>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.user.U>, callback?: grpc_1.requestCallback<dependency_4.user.U>): grpc_1.ClientUnaryCall => {
            return super.FetchUser(message, metadata, options, callback);
        };
        UpdateUser: GrpcUnaryServiceInterface<dependency_8.dto.UpdateUserReq, dependency_4.user.U> = (message: dependency_8.dto.UpdateUserReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.user.U>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_4.user.U>, callback?: grpc_1.requestCallback<dependency_4.user.U>): grpc_1.ClientUnaryCall => {
            return super.UpdateUser(message, metadata, options, callback);
        };
        InviteUser: GrpcUnaryServiceInterface<dependency_8.dto.InviteUserReq, dependency_8.dto.UserRoles> = (message: dependency_8.dto.InviteUserReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.UserRoles>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.UserRoles>, callback?: grpc_1.requestCallback<dependency_8.dto.UserRoles>): grpc_1.ClientUnaryCall => {
            return super.InviteUser(message, metadata, options, callback);
        };
        FetchClaims: GrpcUnaryServiceInterface<dependency_2.pbtypes.Empty, dependency_5.user.ClaimAuth> = (message: dependency_2.pbtypes.Empty, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.user.ClaimAuth>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_5.user.ClaimAuth>, callback?: grpc_1.requestCallback<dependency_5.user.ClaimAuth>): grpc_1.ClientUnaryCall => {
            return super.FetchClaims(message, metadata, options, callback);
        };
        ListEntity: GrpcUnaryServiceInterface<dependency_6.dto.ListEntityReq, dependency_6.dto.ListEntityResp> = (message: dependency_6.dto.ListEntityReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.dto.ListEntityResp>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.dto.ListEntityResp>, callback?: grpc_1.requestCallback<dependency_6.dto.ListEntityResp>): grpc_1.ClientUnaryCall => {
            return super.ListEntity(message, metadata, options, callback);
        };
        FetchEntity: GrpcUnaryServiceInterface<dependency_6.dto.FetchEntityReq, dependency_3.user.Entity> = (message: dependency_6.dto.FetchEntityReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_3.user.Entity>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_3.user.Entity>, callback?: grpc_1.requestCallback<dependency_3.user.Entity>): grpc_1.ClientUnaryCall => {
            return super.FetchEntity(message, metadata, options, callback);
        };
        CreateEntity: GrpcUnaryServiceInterface<dependency_6.dto.CreateEntityReq, dependency_3.user.Entity> = (message: dependency_6.dto.CreateEntityReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_3.user.Entity>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_3.user.Entity>, callback?: grpc_1.requestCallback<dependency_3.user.Entity>): grpc_1.ClientUnaryCall => {
            return super.CreateEntity(message, metadata, options, callback);
        };
        UpdateEntity: GrpcUnaryServiceInterface<dependency_6.dto.UpdateEntityReq, dependency_3.user.Entity> = (message: dependency_6.dto.UpdateEntityReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_3.user.Entity>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_3.user.Entity>, callback?: grpc_1.requestCallback<dependency_3.user.Entity>): grpc_1.ClientUnaryCall => {
            return super.UpdateEntity(message, metadata, options, callback);
        };
        DeleteEntity: GrpcUnaryServiceInterface<dependency_6.dto.DeleteEntityReq, dependency_6.dto.DeleteEntityResp> = (message: dependency_6.dto.DeleteEntityReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.dto.DeleteEntityResp>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_6.dto.DeleteEntityResp>, callback?: grpc_1.requestCallback<dependency_6.dto.DeleteEntityResp>): grpc_1.ClientUnaryCall => {
            return super.DeleteEntity(message, metadata, options, callback);
        };
        ListRole: GrpcUnaryServiceInterface<dependency_7.dto.ListRoleReq, dependency_7.dto.ListRoleResp> = (message: dependency_7.dto.ListRoleReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.ListRoleResp>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.ListRoleResp>, callback?: grpc_1.requestCallback<dependency_7.dto.ListRoleResp>): grpc_1.ClientUnaryCall => {
            return super.ListRole(message, metadata, options, callback);
        };
        CreateRole: GrpcUnaryServiceInterface<dependency_7.dto.CreateRoleReq, dependency_7.dto.RolePermission> = (message: dependency_7.dto.CreateRoleReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.RolePermission>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.RolePermission>, callback?: grpc_1.requestCallback<dependency_7.dto.RolePermission>): grpc_1.ClientUnaryCall => {
            return super.CreateRole(message, metadata, options, callback);
        };
        UpdateRole: GrpcUnaryServiceInterface<dependency_7.dto.UpdateRoleReq, dependency_7.dto.RolePermission> = (message: dependency_7.dto.UpdateRoleReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.RolePermission>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.RolePermission>, callback?: grpc_1.requestCallback<dependency_7.dto.RolePermission>): grpc_1.ClientUnaryCall => {
            return super.UpdateRole(message, metadata, options, callback);
        };
        DeleteRole: GrpcUnaryServiceInterface<dependency_7.dto.DeleteRoleReq, dependency_7.dto.RolePermission> = (message: dependency_7.dto.DeleteRoleReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.RolePermission>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_7.dto.RolePermission>, callback?: grpc_1.requestCallback<dependency_7.dto.RolePermission>): grpc_1.ClientUnaryCall => {
            return super.DeleteRole(message, metadata, options, callback);
        };
        CreateRoleUser: GrpcUnaryServiceInterface<dependency_7.dto.CreateRoleUserReq, dependency_8.dto.UserRoles> = (message: dependency_7.dto.CreateRoleUserReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.UserRoles>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.UserRoles>, callback?: grpc_1.requestCallback<dependency_8.dto.UserRoles>): grpc_1.ClientUnaryCall => {
            return super.CreateRoleUser(message, metadata, options, callback);
        };
        DeleteRoleUser: GrpcUnaryServiceInterface<dependency_7.dto.DeleteRoleUserReq, dependency_8.dto.UserRoles> = (message: dependency_7.dto.DeleteRoleUserReq, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.UserRoles>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_8.dto.UserRoles>, callback?: grpc_1.requestCallback<dependency_8.dto.UserRoles>): grpc_1.ClientUnaryCall => {
            return super.DeleteRoleUser(message, metadata, options, callback);
        };
    }
}
