syntax = "proto3";

package grpc;

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_registration) = true;

import "github.com/elojah/trax/pkg/gogoproto/gogo.proto";

import "github.com/elojah/trax/pkg/pbtypes/empty.proto";

import "github.com/elojah/trax/internal/user/entity.proto";
import "github.com/elojah/trax/internal/user/user.proto";
import "github.com/elojah/trax/internal/user/dto/entity.proto";
import "github.com/elojah/trax/internal/user/dto/role.proto";
import "github.com/elojah/trax/internal/user/dto/user.proto";

service API {
    // Ping
    rpc Ping(pbtypes.Empty) returns (pbtypes.Empty);

    // User
    rpc ListUser(dto.ListUserReq) returns (dto.ListUserResp);
    rpc FetchUser(dto.FetchUserReq) returns (user.U);
    rpc UpdateUser(dto.UpdateUserReq) returns (user.U);

    // Entity
    rpc ListEntity(dto.ListEntityReq) returns (dto.ListEntityResp);
    rpc FetchEntity(dto.FetchEntityReq) returns (user.Entity);
    rpc CreateEntity(dto.CreateEntityReq) returns (user.Entity);
    rpc UpdateEntity(dto.UpdateEntityReq) returns (user.Entity);
    rpc DeleteEntity(dto.DeleteEntityReq) returns (dto.DeleteEntityResp);

    // Roles
    rpc ListRole(dto.ListRoleReq) returns (dto.ListRoleResp);
    rpc CreateRole(dto.CreateRoleReq) returns (dto.RolePermission);
    rpc UpdateRole(dto.UpdateRoleReq) returns (dto.RolePermission);
}
