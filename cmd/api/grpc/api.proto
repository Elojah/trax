syntax = "proto3";

package grpc;

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.goproto_registration) = true;

import "github.com/elojah/trax/pkg/gogoproto/gogo.proto";
import "github.com/elojah/trax/pkg/pbtypes/empty.proto";

import "github.com/elojah/trax/internal/user/user.proto";
import "github.com/elojah/trax/internal/user/entity.proto";
import "github.com/elojah/trax/internal/user/dto/profile.proto";
import "github.com/elojah/trax/internal/user/dto/entity.proto";

service API {
    // Ping
    rpc Ping(pbtypes.Empty) returns (pbtypes.Empty);

    // User
    rpc FetchProfile(pbtypes.Empty) returns (user.Profile);
    rpc UpdateProfile(dto.UpdateProfileReq) returns (user.Profile);

    // Entity
    rpc CreateEntity(user.Entity) returns (user.Entity);
    rpc ListEntity(dto.ListEntityReq) returns (dto.ListEntityResp);
    // rpc UpdateEntity(user.Entity) returns (user.Entity); // TODO: IMPLEMENT
}
