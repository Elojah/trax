/**
 * @fileoverview gRPC-Web generated client stub for grpc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.6.1
// source: github.com/elojah/trax/cmd/admin/grpc/admin.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_elojah_trax_pkg_entity_dto_animation_pb from '../../../../../../github.com/elojah/trax/pkg/entity/dto/animation_pb';
import * as github_com_elojah_trax_pkg_entity_dto_template_pb from '../../../../../../github.com/elojah/trax/pkg/entity/dto/template_pb';
import * as github_com_elojah_trax_pkg_tile_dto_set_pb from '../../../../../../github.com/elojah/trax/pkg/tile/dto/set_pb';
import * as github_com_elojah_trax_pkg_entity_template_pb from '../../../../../../github.com/elojah/trax/pkg/entity/template_pb';
import * as github_com_elojah_trax_pkg_pbtypes_empty_pb from '../../../../../../github.com/elojah/trax/pkg/pbtypes/empty_pb';
import * as github_com_elojah_trax_pkg_pbtypes_string_pb from '../../../../../../github.com/elojah/trax/pkg/pbtypes/string_pb';


export class AdminClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor(hostname: string,
    credentials?: null | { [index: string]: string; },
    options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorMigrateUp = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/MigrateUp',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_pbtypes_string_pb.String) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  migrateUp(
    request: github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  migrateUp(
    request: github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  migrateUp(
    request: github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/MigrateUp',
        request,
        metadata || {},
        this.methodDescriptorMigrateUp,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/MigrateUp',
      request,
      metadata || {},
      this.methodDescriptorMigrateUp);
  }

  methodDescriptorRotateCookieKeys = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/RotateCookieKeys',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  rotateCookieKeys(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  rotateCookieKeys(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  rotateCookieKeys(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/RotateCookieKeys',
        request,
        metadata || {},
        this.methodDescriptorRotateCookieKeys,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/RotateCookieKeys',
      request,
      metadata || {},
      this.methodDescriptorRotateCookieKeys);
  }

  methodDescriptorPing = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/Ping',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  ping(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  ping(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  ping(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/Ping',
        request,
        metadata || {},
        this.methodDescriptorPing,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/Ping',
      request,
      metadata || {},
      this.methodDescriptorPing);
  }

  methodDescriptorCreateTileset = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/CreateTileset',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetReq,
    github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetResp,
    (request: github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetReq) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetResp.deserializeBinary
  );

  createTileset(
    request: github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetReq,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetResp>;

  createTileset(
    request: github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetResp) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetResp>;

  createTileset(
    request: github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_tile_dto_set_pb.CreateTilesetResp) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/CreateTileset',
        request,
        metadata || {},
        this.methodDescriptorCreateTileset,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/CreateTileset',
      request,
      metadata || {},
      this.methodDescriptorCreateTileset);
  }

  methodDescriptorCreateWorld = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/CreateWorld',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    (request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_string_pb.String.deserializeBinary
  );

  createWorld(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_string_pb.String>;

  createWorld(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_string_pb.String) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_string_pb.String>;

  createWorld(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_string_pb.String) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/CreateWorld',
        request,
        metadata || {},
        this.methodDescriptorCreateWorld,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/CreateWorld',
      request,
      metadata || {},
      this.methodDescriptorCreateWorld);
  }

  methodDescriptorCreateTemplate = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/CreateTemplate',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_entity_dto_template_pb.CreateTemplateReq,
    github_com_elojah_trax_pkg_entity_template_pb.Template,
    (request: github_com_elojah_trax_pkg_entity_dto_template_pb.CreateTemplateReq) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_entity_template_pb.Template.deserializeBinary
  );

  createTemplate(
    request: github_com_elojah_trax_pkg_entity_dto_template_pb.CreateTemplateReq,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_entity_template_pb.Template>;

  createTemplate(
    request: github_com_elojah_trax_pkg_entity_dto_template_pb.CreateTemplateReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_entity_template_pb.Template) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_entity_template_pb.Template>;

  createTemplate(
    request: github_com_elojah_trax_pkg_entity_dto_template_pb.CreateTemplateReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_entity_template_pb.Template) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/CreateTemplate',
        request,
        metadata || {},
        this.methodDescriptorCreateTemplate,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/CreateTemplate',
      request,
      metadata || {},
      this.methodDescriptorCreateTemplate);
  }

  methodDescriptorCreateAnimation = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/CreateAnimation',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_entity_dto_animation_pb.CreateAnimationReq,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_entity_dto_animation_pb.CreateAnimationReq) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  createAnimation(
    request: github_com_elojah_trax_pkg_entity_dto_animation_pb.CreateAnimationReq,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  createAnimation(
    request: github_com_elojah_trax_pkg_entity_dto_animation_pb.CreateAnimationReq,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  createAnimation(
    request: github_com_elojah_trax_pkg_entity_dto_animation_pb.CreateAnimationReq,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
      response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
        '/grpc.Admin/CreateAnimation',
        request,
        metadata || {},
        this.methodDescriptorCreateAnimation,
        callback);
    }
    return this.client_.unaryCall(
      this.hostname_ +
      '/grpc.Admin/CreateAnimation',
      request,
      metadata || {},
      this.methodDescriptorCreateAnimation);
  }

}

