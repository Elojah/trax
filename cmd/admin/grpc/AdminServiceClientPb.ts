/**
 * @fileoverview gRPC-Web generated client stub for grpc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: github.com/elojah/trax/cmd/admin/grpc/admin.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as github_com_elojah_trax_pkg_pbtypes_empty_pb from '../../../../../../github.com/elojah/trax/pkg/pbtypes/empty_pb';
import * as github_com_elojah_trax_pkg_pbtypes_string_pb from '../../../../../../github.com/elojah/trax/pkg/pbtypes/string_pb';


export class AdminClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorMigrateUp = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/MigrateUp',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_pbtypes_string_pb.String) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  migrateUp(
    request: github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  migrateUp(
    request: github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  migrateUp(
    request: github_com_elojah_trax_pkg_pbtypes_string_pb.String,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.Admin/MigrateUp',
        request,
        metadata || {},
        this.methodDescriptorMigrateUp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.Admin/MigrateUp',
    request,
    metadata || {},
    this.methodDescriptorMigrateUp);
  }

  methodDescriptorRotateCookieKeys = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/RotateCookieKeys',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  rotateCookieKeys(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  rotateCookieKeys(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  rotateCookieKeys(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.Admin/RotateCookieKeys',
        request,
        metadata || {},
        this.methodDescriptorRotateCookieKeys,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.Admin/RotateCookieKeys',
    request,
    metadata || {},
    this.methodDescriptorRotateCookieKeys);
  }

  methodDescriptorPing = new grpcWeb.MethodDescriptor(
    '/grpc.Admin/Ping',
    grpcWeb.MethodType.UNARY,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    (request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty.deserializeBinary
  );

  ping(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null): Promise<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  ping(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void): grpcWeb.ClientReadableStream<github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty>;

  ping(
    request: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: github_com_elojah_trax_pkg_pbtypes_empty_pb.Empty) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/grpc.Admin/Ping',
        request,
        metadata || {},
        this.methodDescriptorPing,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/grpc.Admin/Ping',
    request,
    metadata || {},
    this.methodDescriptorPing);
  }

}

